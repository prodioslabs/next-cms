generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Collection {
  id        String              @id @default(auto()) @map("_id") @db.ObjectId
  label     String
  name      String              @unique
  slugField String
  schema    Json
  elements  CollectionElement[]
}

enum DataMode {
  DRAFT
  PUBLISHED
}

model CollectionElement {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  mode         DataMode   @default(DRAFT)
  data         Json
  slug         String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String     @db.ObjectId
}

model Singleton {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  label  String
  name   String @unique
  schema Json
  data   Json
}

model SingletonData {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  mode DataMode @default(DRAFT)
  data Json
}

// Media Library
model Folder {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  parent   Folder?  @relation("NestedFolder", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId String?  @db.ObjectId
  children Folder[] @relation("NestedFolder")
  file     File[]
}

// Media Library
model File {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  assetType String
  mimeType  String
  path      String
  url       String
  name      String
  size      Int
  parent    Folder? @relation(fields: [parentId], references: [id])
  parentId  String? @db.ObjectId
  metadata  Json?
}
